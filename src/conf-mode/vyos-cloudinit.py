#!/usr/bin/env python3
#
# Copyright (C) 2018 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#

import sys
import os
import time
from urllib.parse import urlparse

from vyos.config import Config
from vyos.util import ConfigError

config_file = r'/etc/default/vyos-cloudinit'
disable_cmd = 'sudo systemctl disable vyos-cloudinit'
enable_cmd = 'sudo systemctl enable vyos-cloudinit'
supported_env = ['ec2', 'openstack']
supported_scheme = ['http', 'https']


UnsupportedEnvError = ConfigError('supported environment: {}'.format(', '.join(supported_env)))
UnsupportedSSHKeyURLSchemeError = ConfigError('supported ssh-key url scheme: {}'.format(', '.join(supported_scheme)))
UnsupportedUserDataURLSchemeError = ConfigError('supported user-data url scheme: {}'.format(', '.join(supported_scheme)))


def get_config():
    c = {}

    conf = Config()
    conf.set_level('service cloudinit')

    if conf.exists('environment'):
        c['environment'] = conf.return_value('environment')

    if conf.exists('ssh-key'):
        c['ssh-key'] = conf.return_value('ssh-key')

    if conf.exists('ssh-user'):
        c['ssh-user'] = conf.return_value('ssh-user')

    if conf.exists('user-data'):
        c['user-data'] = conf.return_value('user-data')

    return c


def verify(c):
    if 'environment' in c and c['environment'] not in supported_env:
        return UnsupportedEnvError
    if 'ssh-key' in c:
        u = urlparse(c['ssh-key'])
        if u.scheme not in supported_scheme:
            return UnsupportedSSHKeyURLSchemeError
    if 'user-data' in c:
        u = urlparse(c['user-data'])
        if u.scheme not in supported_scheme:
            return UnsupportedUserDataURLSchemeError
    return None


def generate(c):
    text = '''### Autogenerated by vyos-cloud-init.py on {t} ###
ENVIRONMENT="{e}"
SSH_USER="{u}"
SSH_KEY="{k}"
USER_DATA="{d}"
'''.strip()
    t = time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
    e = c['environment'] if 'environment' in c else ''
    if e == 'ec2' or 'openstack':
        u = "vyos"
        k = "http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key"
        d = "http://169.254.169.254/latest/user-data"

    if 'environment' not in c and 'ssh-user' not in c:
        c['ssh-user'] = 'vyos'

    u = c['ssh-user'] if 'ssh-user' in c else u
    k = c['ssh-key'] if 'ssh-key' in c else k
    d = c['user-data'] if 'user-data' in c else d

    text = text.format(t=t, e=e, k=k, u=u, d=d)

    # write new configuration file
    f = open(config_file, 'w')
    f.write(text)
    f.close()

    return None


def apply(c):
    if len(c.keys()) == 0:
        os.system(disable_cmd)
    else:
        os.system(enable_cmd)

    return None


if __name__ == '__main__':
    try:
        c = get_config()
        verify(c)
        generate(c)
        apply(c)
    except ConfigError as e:
        print(e)
        sys.exit(1)
